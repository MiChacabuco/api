stages:
  - build
  - deliver
  - deploy

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - mkdir images
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE -f compose/production/django/Dockerfile .
    - docker save $CI_REGISTRY_IMAGE > images/api.tar
  artifacts:
    paths:
      - images
  only:
    - production

deliver:
  stage: deliver
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker load -i images/api.tar
    - docker push $CI_REGISTRY_IMAGE
  dependencies:
    - build
  only:
    - production

deploy:
  stage: deploy
  image: ubuntu
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan api.michacabuco.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh root@api.michacabuco.com deploy $CI_JOB_TOKEN $CI_REGISTRY
  only:
    - production
